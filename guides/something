### if you faced problem when pushed into github/gitlab RPC failed; result=22, HTTP code = 413

you need to add "client_max_body_size 30g" in nginx.conf:

server {
        server_name  someserver;

        location / {
          client_max_body_size 30g;
        }

### if you've gitlab and behind nginx for proxy, and your images not displayed, then you need add proxy_set_header
    server {
        server_name  someserver;

        location / {

          proxy_set_header Host $http_host;
          proxy_pass http://somserver/;
        }

###
for ((i=1;i<=1000;i++)); do time curl 1.2.3.4 -I; done
for ((i=82;i<127;i++)); do echo -n "1.2.3.${i}, " >> ipList; done

# if you'd like rotate /var/log/messages logs
# delete /var/log/messages from /etc/logrotate.d/syslog
sed -i 's/\/var\/log\/messages//g;/^$/d' /etc/logrotate.d/syslog

# create rotate configuration in /etc/logrotate.d/
cat <<EOF > /etc/logrotate.d/messages
/var/log/messages {
       rotate 3
       compress
       delaycompress
       weekly
       missingok
       postrotate
         /bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true
       endscript
}
EOF



    server {
        listen       80;
        server_name  example.com;

        location / {
          proxy_pass http://test.example.com/;
        }

        location /db {
          rewrite ^/db/(.*)$ /$1 break;
          proxy_pass http://db.test.example.com;
        }
    }

du -d1 -h /var/log | sort -h

ip addr show enp2s0f0 | grep -Po 'inet \K[\d.]+'

curl --data "@Documents/body" http://

find /opt/lampp/htdocs -type d -exec chmod 755 {} \;


# if you have reverse proxy nginx with custome root dir "/usr/share/nginx/html/test" - probably you'll get blank screen and 304 code.
# To avoid this problem you need to add 2 locations
  location /test {
    allow 1.2.3.4;
    deny all;

    proxy_set_header X-Forwarded-For $remote_addr;

    rewrite ^/test/(.*)$ /$1 break;
    proxy_pass http://some-console;
  }

   location ~ ^/test/(js|css)  {
    allow 1.2.3.4;
    deny all;

    proxy_set_header X-Forwarded-For $remote_addr;

    proxy_pass http://some-console;
  }

# strace systemd unit
#ExecStart=/usr/bin/strace -f -tt -o /tmp/strace.log -D /usr/local/bin/somebin

# replace last ip octet
client=$(ifdata -pa ens192)
sed -i "s/IP/$(echo "${client%.*}").254/" /etc/sysconfig/something


# if you can't get any logs
kubectl logs somepod
error: You must be logged in to the server (the server has asked for the client to provide credentials ( pods/log 

# check CN in apiserver-kubelet-client.crt
openssl x509 -in apiserver-kubelet-client.crt -text -noout
# correct value
 Subject: CN=kube-apiserver-kubelet-client, O=system:masters
 
# psql
CREATE USER someone WITH PASSWORD '';

ALTER DATABASE someone OWNER TO someone;

GRANT CONNECT ON DATABASE someone TO someone2;
GRANT USAGE ON SCHEMA public TO someone2;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO someone2;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO someone2;

# if you faced problem installing something
W: GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 78BD65473CB3BD13
# install public key with command
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 78BD65473CB3BD13


# if you faced problem with problem as below
sudo echo "$USER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
-bash: /etc/sudoers: Permission denied
# workaround
# In the first case, tee -a will append its standard input to the file and we execute this command as root.
echo "$USER ALL=(ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers
# In the second case, we run bash as root and ask it to execute a command (-c) and the entire command will be executed as root. Note the tricky "/' business here which will dictate when the $USER variable will be expanded.
sudo bash -c "echo '$USER ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"


find . \( -type d -name .git -prune \) -o -type f -print0 | xargs -0 sed -i 's/mongo_pass/\$mongo_pass/g'

packages=("procps" "htop" "vim" "strace")
for i in "${packages[@]}";do apt list $i; done 
for i in "${packages[@]}";do apt search $i; done
