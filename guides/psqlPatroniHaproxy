# Prepare

#!/bin/bash
yum update -y
yum install epel-release gcc python-devel etcd haproxy -y
yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm -y
yum install postgresql11 postgresql11-server -y
yum install python-psycopg2 -y
yum install python-pip -y
pip install pip --upgrade
pip install setuptools --upgrade
pip install patroni[etcd]

mkdir -p /data/patroni
chown -R postgres:postgres /data
chmod -R 700 /data

echo "net.ipv4.ip_nonlocal_bind = 1" >> /etc/sysctl.conf 
echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
sysctl -p

systemctl stop firewalld
systemctl disable firewalld

sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
setenforce 0
getenforce

# Create systemd service to run patroni on every node

cat <<EOF > /etc/systemd/system/patroni.service
[Unit]
Description=Runners to orchestrate a high-availability PostgreSQL
After=syslog.target network.target

[Service]
Type=simple

User=postgres
Group=postgres

ExecStart=/bin/patroni /etc/patroni.yml

KillMode=process

TimeoutSec=30

Restart=no

[Install]
WantedBy=multi-user.target
EOF

echo "Create systemd service to run patroni"

# Configure etcd
# These settings apply only to the node where etcd will run

cat <<EOF > /etc/etcd/etcd.conf
ETCD_LISTEN_PEER_URLS="http://10.5.0.4:2380"
ETCD_LISTEN_CLIENT_URLS="http://localhost:2379,http://10.5.0.4:2379"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://10.5.0.4:2380"
ETCD_INITIAL_CLUSTER="etcd01=http://10.5.0.4:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://10.5.0.4:2379"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-c01"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
ETCD_NAME="etcd01"
EOF

echo "Configure etcd settings"

# These settings apply to all nodes

cat <<EOF > /etc/patroni.yml
scope: postgresql
name: postgresql1

restapi:
  listen: 10.5.0.4:8008
  connect_address: 10.5.0.4:8008

etcd:
  host: 10.5.0.4:2379

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true

  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - host replication replicator 127.0.0.1/32 md5
  - host replication replicator 10.5.0.4/32 md5
  - host replication replicator 10.5.0.5/32 md5
  - host replication replicator 10.5.0.6/32 md5
  - host replication replicator 10.5.0.7/32 md5
  - host replication replicator 10.25.0.7/32 md5
  - host all all 0.0.0.0/0 md5

  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

postgresql:
  listen: 10.5.0.4:5432
  connect_address: 10.5.0.4:5432
  data_dir: /data/patroni
  bin_dir: /usr/pgsql-11/bin
  pgpass: /tmp/pgpass0
  authentication:
    replication:
      username: replicator
      password: rep-pass
    superuser:
      username: postgres
      password: zalando
    rewind:  # Has no effect on postgres 10 and lower
      username: rewind_user
      password: rewind_password
  parameters:
    synchronous_commit: "on"
    synchronous_standby_names: "postgresql3"


tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
EOF

echo "Configure patroni settings"

# Configure haproxy
# These settings apply only to the node where haproxy will run.

cat <<EOF > /etc/haproxy/haproxy.cfg
global
    maxconn 100

defaults
    log global
    mode tcp
    retries 2
    timeout client 30m
    timeout connect 4s
    timeout server 30m
    timeout check 5s

listen stats
    mode http
    bind *:7000
    stats enable
    stats uri /

listen postgres
    bind *:5000
    option httpchk
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server postgresql_postgres1_5432 10.5.0.4:5432 maxconn 100 check port 8008
    server postgresql_postgres2_5432 10.5.0.5:5432 maxconn 100 check port 8008
    server postgresql_postgres3_5432 10.5.0.6:5432 maxconn 100 check port 8008
    server postgresql_postgres4_5432 10.25.0.7:5432 maxconn 100 check port 8008
    server postgresql_postgres5_5432 10.5.0.7:5432 maxconn 100 check port 8008
EOF

echo "Configure haproxy settings"

# Start services

systemctl start etcd
systemctl enable etcd
systemctl start haproxy
systemctl enable haproxy
systemctl start patroni
systemctl enable patroni


# Check replications in cluster

su - postgres -c "psql"
SELECT * FROM pg_stat_replication;

# etcdctl

etcdctl --endpoints "http://10.5.0.4:2379" member list
etcdctl --endpoints "http://10.5.0.4:2379" ls /service
etcdctl --endpoints "http://10.5.0.4:2379" ls /service/postgresql
etcdctl --endpoints "http://10.5.0.4:2379" get /service/postgresql/config
etcdctl --endpoints "http://10.5.0.4:2379" get /service/postgresql/leader
etcdctl --endpoints "http://10.5.0.4:2379" ls /service/postgresql/members
etcdctl --endpoints "http://10.5.0.4:2379" get /service/postgresql/members/postgresql2
etcdctl --endpoints "http://10.5.0.4:2379" get /service/postgresql/members/postgresql1
etcdctl --endpoints "http://10.5.0.4:2379" get /service/postgresql/members/postgresql3
